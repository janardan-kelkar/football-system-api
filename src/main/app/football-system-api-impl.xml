<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/current/mule-mongo.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <flow name="post-team-flow">
        <dw:transform-message doc:name="1.Set MIME type of payload &#10;2.Prepare mongo query doc" metadata:id="17cb8660-d877-43bd-83ea-80ad12d95bbc">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload]]></dw:set-payload>
            <dw:set-variable variableName="teamQueryDoc"><![CDATA[%dw 1.0
%output application/json
---
{
	"_id":lower payload.name
}]]></dw:set-variable>
            <dw:set-variable variableName="teamName"><![CDATA[%dw 1.0
%output application/java
---
payload.name]]></dw:set-variable>
        </dw:transform-message>
        <enricher target="#[flowVars.existingTeam]" doc:name="Message Enricher">
            <mongo:find-one-document config-ref="Blacksky" collection="TEAMS" query-ref="#[flowVars.teamQueryDoc]" failOnNotFound="false" doc:name="Check if team exists"/>
        </enricher>
        <choice doc:name="Choice">
            <when expression="#[flowVars.existingTeam == null]">
                <dw:transform-message doc:name="Map all payload fields" metadata:id="cc984747-c324-4f0c-a570-bdfaad6768ea">
                    <dw:input-payload mimeType="application/json"/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"_id": lower payload.name default "",
	name:  lower payload.name default "",
	country: lower payload.country default "",
	manager: lower payload.manager default "",
	stadium: lower payload.stadium default "",
	established: payload.established default null,
	leaguePosition: payload.leaguePosition default null
}]]></dw:set-payload>
                </dw:transform-message>
                <set-property propertyName="http.status" value="201" doc:name="Property"/>
                <set-variable variableName="responseBody" value="#['{&quot;message&quot;:&quot;Team ' + flowVars.teamName + ' added successfully.&quot;}']" doc:name="Variable"/>
            </when>
            <otherwise>
                <dw:transform-message doc:name="Map supplied payload fields." metadata:id="1ad1bf33-0838-437e-9aff-f6ac2a3c57dc">
                    <dw:input-payload mimeType="application/json"/>
                    <dw:input-variable mimeType="application/json" variableName="existingTeam"/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"_id": lower payload.name,
	name: (lower payload.name 
			when payload.name != null 
				otherwise (flowVars.existingTeam.name)),
	country: (lower payload.country 
			when payload.country != null
				otherwise (flowVars.existingTeam.country)),
	manager: (lower payload.manager 
			when payload.manager != null 
				otherwise (flowVars.existingTeam.manager)),
	stadium: (lower payload.stadium 
			when payload.stadium != null 
				otherwise (flowVars.existingTeam.stadium)),
	established: (payload.established 
			when payload.established != null 
				otherwise (flowVars.existingTeam.established)),
	leaguePosition: (payload.leaguePosition 
			when payload.leaguePosition != null 
				otherwise (flowVars.existingTeam.leaguePosition))
}]]></dw:set-payload>
                </dw:transform-message>
                <set-property propertyName="http.status" value="207" doc:name="Property"/>
                <set-variable variableName="responseBody" value="#['{&quot;message&quot;:&quot;Team ' + flowVars.teamName + ' updated successfully.&quot;}']" doc:name="Variable"/>
            </otherwise>
        </choice>
        <mongo:save-document config-ref="Blacksky" collection="TEAMS" doc:name="Save/Upsert Team"/>
        <set-payload value="#[flowVars.responseBody]" mimeType="application/json" doc:name="Set Payload"/>
    </flow>
    <flow name="get-team-flow">
        <dw:transform-message doc:name="1.Prepare mongo query doc." metadata:id="af9e54f2-8799-4a1f-9c86-04d4f45d9816">
            <dw:set-variable variableName="teamQueryDoc"><![CDATA[%dw 1.0
%output application/json
---
{
	"_id": lower inboundProperties.'http.uri.params'.teamName
}]]></dw:set-variable>
        </dw:transform-message>
        <mongo:find-one-document config-ref="Blacksky" collection="TEAMS" query-ref="#[flowVars.teamQueryDoc]" failOnNotFound="false" doc:name="Get team"/>
        <choice doc:name="Choice">
            <when expression="#[payload == null]">
                <set-property propertyName="http.status" value="404" doc:name="Property"/>
                <set-payload value="#['{&quot;message&quot;: &quot;' + message.inboundProperties.'http.uri.params'.teamName + ' is not a valid team!&quot;}']" doc:name="Set Payload" mimeType="application/json"/>
            </when>
            <otherwise>
                <json:object-to-json-transformer doc:name="Convert object to json"/>
                <dw:transform-message doc:name="Transform Message" metadata:id="7f8cd1f0-ac30-42f4-969d-f1b44faf55c7">
                    <dw:input-payload mimeType="application/json"/>
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/json

---
{
	country: capitalize payload.country
				when (payload.country != null and payload.country != "")
					otherwise null,
	established: payload.established,
	leaguePosition: payload.leaguePosition,
	manager: capitalize payload.manager 
				when  (payload.manager != null and payload.manager != "")
					otherwise null,
	name: capitalize payload.name,
	stadium: capitalize payload.stadium
				when (payload.stadium != null and payload.stadium != null)
					otherwise null
}]]></dw:set-payload>
                </dw:transform-message>
            </otherwise>
        </choice>
        <logger level="INFO" doc:name="Logger"/>
    </flow>
    
</mule>
